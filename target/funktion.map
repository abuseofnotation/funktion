{
  "version": 3,
  "sources": [
    "node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "library/compose.js",
    "library/curry.js",
    "library/funktion.js",
    "library/map.js",
    "library/monads/bind.js",
    "library/monads/constructor.js",
    "library/monads/either.js",
    "library/monads/maybe.js",
    "library/monads/monads.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "module.exports = function(){\r\n\r\n\t//Convert functions to an array and flip them (for right-to-left execution)\r\n\tvar functions = Array.prototype.slice.call(arguments).reverse()\r\n\t//Check if input is OK:\r\n\tfunctions.forEach(function(funk){if(typeof funk !== \"function\"){throw new TypeError(funk+\" is not a function\" )}})\r\n\t//Return the function which composes them\r\n\treturn function(){\r\n\t\t//Take the initial input\r\n\t\tvar input = arguments\r\n\t\tvar context\r\n\t\treturn functions.reduce(function(return_result, funk, i){ \r\n\t\t\t//If this is the first iteration, apply the arguments that the user provided\r\n\t\t\t//else use the return result from the previous function\r\n\t\t\treturn (i ===0?funk.apply(context, input): funk(return_result))\r\n\t\t\t//return (i ===0?funk.apply(context, input): funk.apply(context, [return_result]))\r\n\t\t}, undefined)\r\n\t}\r\n}",
    "module.exports = function curry(funk, initial_arguments){\r\n\tvar context = this\r\n\treturn function(){\r\n\t\tvar all_arguments = (initial_arguments||[]).concat(Array.prototype.slice.call(arguments, 0))\r\n\t\treturn all_arguments.length>=funk.length?funk.apply(this, all_arguments):curry(funk, all_arguments)\r\n\t}\r\n}",
    "var monads = require(\"./monads/monads\")\r\nmodule.exports = {\r\n\tcompose:require(\"./compose\"),\r\n\tcurry:require(\"./curry\"),\r\n\tmap:require(\"./map\"),\r\n\tlog:function(a){console.log(a);return a}\r\n}\r\n\r\n\r\nwindow.f = module.exports\r\nwindow.m = monads",
    "var curry = require(\"./curry\")\r\nmodule.exports = curry(function(funk, monad){\r\n\t\tif(typeof funk!==\"function\"){throw funk+\" is not a function\"}\r\n\t\tif(typeof monad.map!==\"function\"){throw monad+\" is not a monad\"}\r\n\t\treturn monad.map(funk)\r\n})",
    "var curry = require(\"../curry\")\r\nmodule.exports = curry(function(funk, monad){\r\n\t\tif(typeof funk!==\"function\"){throw funk+\" is not a function\"}\r\n\t\tif(typeof monad.bind!==\"function\"){throw monad+\" is not a monad\"}\r\n\t\treturn monad.bind(funk)\r\n})",
    "var c = require(\"../compose\")\r\nmodule.exports = function(methods){\r\n\r\n\treturn function(a,b,c,d){return add_methods(methods.pure.apply(this, arguments))}\r\n\r\n\tfunction add_methods(monad){\r\n\t\tmonad.map = c(add_methods, methods.map.bind(null, monad))\r\n\t\tmonad.join = c(add_methods, methods.join.bind(null, monad))\r\n\t\t//monad.chain = monad.bind = c(add_methods, methods.join, methods.map.bind(null, monad))\r\n\t\tmonad.chain = monad.bind = function(funk){if(funk===undefined){throw \"function not defined\"}; return monad.map(funk).join()}\r\n\r\n\t\treturn monad;\r\n\t}\r\n}",
    "module.exports = {\r\n\t//a -> m a\r\n\tpure:function(right, left){\r\n\t\treturn {_left:left, _right:right}\r\n\t},\r\n\t//m a -> ( a -> b ) -> m b\r\n\tmap:function(val, funk){\r\n\t\tnew_right = (val._right!==undefined)?funk(val._right):undefined\r\n\t\treturn {_left:val._left, _right:new_right}\r\n\t},\r\n\t//m (m x) -> m x \r\n\tjoin:function(val){\r\n\t\tvar new_val\r\n\t\tif(val._right!==undefined){\r\n\t\t\tnew_val = val._right\r\n\t\t}else{\r\n\t\t\tnew_val = {_left:val._left}\r\n\t\t}\r\n\t\treturn new_val\r\n\t}\r\n}\r\n",
    "module.exports = {\r\n\t//a -> m a\r\n\tpure:function(input){\r\n\t\treturn {_value:input}\r\n\t},\r\n\t//m a -> ( a -> b ) -> m b\r\n\tmap:function(val, funk){\r\n\t\tnew_val = (val._value!==undefined)?funk(val._value):undefined\r\n\t\treturn {_value:new_val}\r\n\t},\r\n\t//m (m x) -> m x\r\n\tjoin:function(val){\r\n\t\tvar new_val\r\n\t\tif(val._value!==undefined){\r\n\t\t\tvar new_val = val._value._value\r\n\t\t}\r\n\t\treturn {_value:new_val}\r\n\t}\r\n}\r\n",
    "var constructor = require(\"./constructor\")\r\nmodule.exports = {\r\n\tmaybe:constructor(require(\"./maybe\")),\r\n\teither:constructor(require(\"./either\")),\r\n\tbind:(require(\"./bind\"))\r\n}\r\nwindow.m = module.exports"
  ]
}